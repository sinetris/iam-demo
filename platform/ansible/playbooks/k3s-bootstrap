---
# Move in k3s role
- name: Prepare k3s control planes
  hosts: k3s_control_planes
  become: true
  tasks:
    - name: Check that /var/local/data/ exists
      failed_when: >-
        not k3s_data_path.stat.exists
        or not k3s_data_path.stat.isdir
      ansible.builtin.stat:
        path: /var/local/data/
      register: k3s_data_path
    - name: Install dependencies
      community.general.snap:
        name:
          - yq
    - name: Set k3s external IP
      check_mode: false
      ansible.builtin.set_fact:
        k3s_external_ip: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
- name: Build a k3s cluster
  hosts: k3s_cluster
  become: true
  roles:
    - role: sinetris.k3s
  environment:
    KUBECONFIG: "{{ k3s_kubeconfig }}"
- name: K3s cluster basic setup
  hosts: k3s_cluster
  become: true
  tasks:
    - name: Run kustomize for kubernetes-dashboard
      delegate_to: localhost
      when:
        - k3s_primary_control_node
        - k3s_state is defined
        - k3s_state == 'installed'
      kubernetes.core.k8s:
        definition: "{{
            lookup('kubernetes.core.kustomize', dir=kubernetes_dashboard_path)
          }}"
      environment:
        KUBECONFIG: "{{ k3s_kubeconfig }}"
    - name: Create coredns-custom ConfigMap
      delegate_to: localhost
      when:
        - k3s_primary_control_node
        - k3s_state is defined
        - k3s_state == 'installed'
      kubernetes.core.k8s:
        apply: true
        definition: "{{ lookup('template', 'coredns-custom.yaml.j2') }}"
      environment:
        KUBECONFIG: "{{ k3s_kubeconfig }}"
