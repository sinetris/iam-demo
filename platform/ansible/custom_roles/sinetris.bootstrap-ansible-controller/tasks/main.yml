---
- name: Setup Ansible Controller
  become: true
  block:
    - name: Create directory .kube in shared data directory
      ansible.builtin.file:
        path: /var/local/data/.kube
        state: directory
        owner: "{{ ansible_controller_user }}"
        group: "{{ ansible_controller_user }}"
        mode: u=rwx,g=rx,o=
    - name: Install kubernetes library on ansible-controller
      delegate_to: localhost
      ansible.builtin.apt:
        pkg: python3-kubernetes
        state: present
    - name: Create directory /usr/local/etc/certs/
      ansible.builtin.file:
        path: /usr/local/etc/certs
        state: directory
        owner: root
        group: adm
        mode: u=rwx,g=rx,o=rx
    - name: Copy generate-custom-ca-certs.sh file
      delegate_to: localhost
      ansible.builtin.copy:
        src: generate-custom-ca-certs.sh
        dest: /usr/local/bin/generate-custom-ca-certs.sh
        group: "{{ ansible_user }}"
        owner: "{{ ansible_user }}"
        mode: u=rwx,g=rx,o=
    - name: Run generate-custom-ca-certs.sh
      ansible.builtin.script:
        cmd: /usr/local/bin/generate-custom-ca-certs.sh
      register: custom_ca_result
      changed_when: false
      failed_when: >
        (custom_ca_result.rc != 0) or
        ('CA certificate generation complete.' not in custom_ca_result.stdout_lines)
      environment:
        PROJECT: "{{ project_domain }}"
        DATA_DIR: "{{ ca_root_certs_path }}"
        TIMESTAMP: "{{ ca_root_certs_timestamp }}"
      no_log: "{{ do_not_log }}"
    - name: Save custom_ca_result.stdout checksum
      ansible.builtin.copy:
        content: "{{ custom_ca_result.stdout | ansible.builtin.checksum }}"
        dest: /usr/local/bin/generate-custom-ca-certs.sh.checksum
        group: "{{ ansible_user }}"
        owner: "{{ ansible_user }}"
        mode: u=rw,g=r,o=
    - name: Fix certs ownership
      ansible.builtin.file:
        path: "{{ base_certs_path }}"
        state: directory
        recurse: true
        group: adm
        mode: ugo+rx
