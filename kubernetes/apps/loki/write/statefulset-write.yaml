---
# Source: loki/templates/write/statefulset-write.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-write
  namespace: observability
  labels:
    helm.sh/chart: loki-6.24.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/version: "3.3.2"
    app.kubernetes.io/component: write
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: loki-write-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: loki
      app.kubernetes.io/component: write
  template:
    metadata:
      annotations:
        checksum/config: b74c7109e2c95cb6cb35abee7bc50a66f744092aa864cfafdecf6cfbf5d518f4
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: loki
        app.kubernetes.io/component: write
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: loki
      automountServiceAccountToken: true
      enableServiceLinks: true

      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      containers:
      - name: loki
        image: docker.io/grafana/loki:3.3.2
        imagePullPolicy: IfNotPresent
        args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=write
        - -config.expand-env=true
        ports:
        - name: http-metrics
          containerPort: 3100
          protocol: TCP
        - name: grpc
          containerPort: 9095
          protocol: TCP
        - name: http-memberlist
          containerPort: 7946
          protocol: TCP
        env:
        - name: MINIO_S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: internalEndpoint
              name: minio-url
        - name: MINIO_S3_ACCESKEYID
          valueFrom:
            secretKeyRef:
              key: user
              name: loki-s3-credentials
        - name: MINIO_S3_SECRETACCESSKEY
          valueFrom:
            secretKeyRef:
              key: password
              name: loki-s3-credentials
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 30
          timeoutSeconds: 1
        volumeMounts:
        - name: config
          mountPath: /etc/loki/config
        - name: runtime-config
          mountPath: /etc/loki/runtime-config
        - name: data
          mountPath: /var/loki
        resources: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: write
            topologyKey: kubernetes.io/hostname
      volumes:
      - name: config
        configMap:
          name: loki
          items:
          - key: "config.yaml"
            path: "config.yaml"
      - name: runtime-config
        configMap:
          name: loki-runtime
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "10Gi"
