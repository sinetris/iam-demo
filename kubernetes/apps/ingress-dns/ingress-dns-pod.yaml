apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-ingress-dns
  namespace: kube-system
  labels:
    app: kube-ingress-dns
    kubernetes.io/bootstrapping: rbac-defaults
    app.kubernetes.io/part-of: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-ingress-dns
  namespace: kube-system
  labels:
    app: kube-ingress-dns
    kubernetes.io/bootstrapping: rbac-defaults
    app.kubernetes.io/part-of: kube-system
rules:
- apiGroups:
  - ''
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-ingress-dns
  namespace: kube-system
  labels:
    app: kube-ingress-dns
    kubernetes.io/bootstrapping: rbac-defaults
    app.kubernetes.io/part-of: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-ingress-dns
subjects:
- kind: ServiceAccount
  name: kube-ingress-dns
  namespace: kube-system
---
apiVersion: v1
kind: Pod
metadata:
  name: kube-ingress-dns
  namespace: kube-system
  labels:
    app: kube-ingress-dns
    app.kubernetes.io/part-of: kube-system
spec:
  serviceAccountName: kube-ingress-dns
  hostNetwork: true
  containers:
  - name: kube-ingress-dns
    image: gcr.io/k8s-minikube/minikube-ingress-dns:0.0.2
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 128Mi
    ports:
    - containerPort: 53
      protocol: UDP
    env:
    - name: DNS_PORT
      value: '53'
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
