logging {
  level  = "info"
  format = "logfmt"
}

discovery.kubernetes "pods" {
  role = "pod"
}

// -- Start: Minimal setup --
// loki.source.kubernetes "pods" {
//   targets    = discovery.kubernetes.pods.targets
//   forward_to = [loki.write.default.receiver]
// }
// -- End: Minimal setup --

// -- Start: Relabeling setup --
discovery.relabel "pod_logs" {
  targets = discovery.kubernetes.pods.targets

  rule {
    source_labels = ["__meta_kubernetes_namespace"]
    action = "replace"
    target_label = "namespace"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_name"]
    action = "replace"
    target_label = "pod"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_container_name"]
    action = "replace"
    target_label = "container"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
    action = "replace"
    target_label = "app"
  }
  rule {
    source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
    action = "replace"
    target_label = "job"
    separator = "/"
    replacement = "$1"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
    action = "replace"
    target_label = "__path__"
    separator = "/"
    replacement = "/var/log/pods/*$1/*.log"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_container_id"]
    action = "replace"
    target_label = "container_runtime"
    regex = "^(\\S+):\\/\\/.+$"
    replacement = "$1"
  }
}

loki.source.kubernetes "pod_logs" {
  targets    = discovery.relabel.pod_logs.output
  forward_to = [loki.process.pod_logs.receiver]
}

loki.process "pod_logs" {
  stage.static_labels {
      values = {
        from_alloy = "true",
      }
  }
  forward_to = [loki.write.default.receiver]
}
// -- End: Relabeling setup --

loki.write "default" {
  endpoint {
    url = env("LOKI_URL")
  }
}

// -- Start: Prometheus Scrape
// -- Remember to remove other Prometheus pull/push services (e.g. Service Monitors) --

// prometheus.scrape "pods" {
//   targets    = discovery.kubernetes.pods.targets
//   forward_to = [prometheus.remote_write.default.receiver]
// }

// prometheus.remote_write "default" {
//   endpoint {
//     // PROMETHEUS_URL: "http://prometheus-observability-s-prometheus.observability:9090/api/prom/push"
//     url = env("PROMETHEUS_URL")
//   }
// }
// -- End: Prometheus Scrape
